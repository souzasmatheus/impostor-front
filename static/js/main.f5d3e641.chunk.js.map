{"version":3,"sources":["components/Login/index.js","components/AddForm/index.js","components/ProductsList/index.js","components/Home/index.js","App.js","index.js"],"names":["Login","setAuthToken","useState","password","setPassword","error","setError","login","a","Axios","post","process","res","headers","Typography","paragraph","style","marginTop","marginBottom","align","variant","Alert","severity","TextField","type","float","fullWidth","label","onChange","e","target","value","Button","onClick","AddForm","addToDB","addFailure","addSuccess","isAdding","name","setName","tax","setTax","keyword","setKeyword","keywordsArr","setKeywordsArr","products","setProducts","keywordsEl","map","el","index","Paper","key","padding","display","alignItems","marginRight","newArr","filter","ind","removeKeyword","cursor","Container","maxWidth","Card","CardHeader","title","CardContent","marginLeft","Number","toFixed","IconButton","length","newProduct","keywords","addProduct","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","TableBody","product","scope","join","color","removeProduct","ProductsList","fetchProducts","searchFailure","searchSuccess","searchedProducts","deleteFromDB","deleteSuccess","checked","setChecked","query","setQuery","subheader","Grid","container","spacing","item","Switch","disabled","id","_id","Home","authToken","setAddSuccess","setAddFailure","setIsAdding","setSearchedProducts","setSearchingFailure","setSearchingSuccess","setDeleteSuccess","data","message","delete","newProductsArr","get","xs","md","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5d3e641.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Axios from 'axios';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Login({ setAuthToken }) {\n  const [password, setPassword] = useState(null);\n  const [error, setError] = useState(null);\n\n  const login = async () => {\n    try {\n      const res = await Axios.post(\n        `${process.env.REACT_APP_API_URL}/api/admin/login`,\n        {\n          password\n        }\n      );\n\n      setAuthToken(res.headers['auth-token']);\n    } catch (error) {\n      setError('Ocorreu um erro. Por favor, tente fazer login novamente.');\n    }\n  };\n\n  return (\n    <>\n      <Typography\n        paragraph\n        style={{ marginTop: '5%', marginBottom: '5%' }}\n        align=\"center\"\n        variant=\"h2\"\n      >\n        Identifique-se, estatista!\n      </Typography>\n      {error && (\n        <Alert style={{ marginBottom: '3%' }} severity=\"error\">\n          {error}\n        </Alert>\n      )}\n      <TextField\n        type=\"password\"\n        style={{ float: 'right' }}\n        fullWidth\n        label=\"Senha\"\n        variant=\"outlined\"\n        onChange={e => setPassword(e.target.value)}\n      />\n      <Button\n        onClick={() => login()}\n        style={{ float: 'right', marginTop: '3%' }}\n        variant=\"outlined\"\n      >\n        Login\n      </Button>\n    </>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Container from '@material-ui/core/Container';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport Paper from '@material-ui/core/Paper';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction AddForm({ addToDB, addFailure, addSuccess, isAdding }) {\n  const [name, setName] = useState(\"\");\n  const [tax, setTax] = useState(null);\n  const [keyword, setKeyword] = useState('');\n  const [keywordsArr, setKeywordsArr] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  const saveKeyword = () => {\n    setKeywordsArr([...keywordsArr, keyword]);\n    setKeyword('');\n  };\n\n  const removeKeyword = index => {\n    const newArr = keywordsArr.filter((el, ind) => ind !== index);\n    setKeywordsArr(newArr);\n  };\n\n  const addProduct = () => {\n    const newProduct = {\n      name,\n      tax,\n      keywords: keywordsArr\n    };\n\n    setProducts([...products, newProduct]);\n    setName('');\n    setTax('');\n    setKeywordsArr([]);\n  };\n\n  const removeProduct = index => {\n    const newArr = products.filter((el, ind) => ind !== index);\n    setProducts(newArr);\n  };\n\n  const keywordsEl = keywordsArr.map((el, index) => (\n    <Paper\n      key={`keyword-${index + 1}`}\n      variant=\"outlined\"\n      style={{\n        padding: '2px',\n        display: 'inline-flex',\n        alignItems: 'center',\n        marginRight: '2px'\n      }}\n    >\n      {el}\n      <CloseIcon\n        onClick={() => removeKeyword(index)}\n        style={{ cursor: 'pointer' }}\n      />\n    </Paper>\n  ));\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Card>\n          {addFailure && <Alert severity=\"error\">{addFailure}</Alert>}\n          {addSuccess && <Alert severity=\"success\">{addSuccess}</Alert>}\n          <CardHeader title=\"Adicione um produto\" />\n          <CardContent>\n            <div style={{ display: 'flex', marginBottom: '10px' }}>\n              <TextField\n                onChange={e => setName(e.target.value)}\n                value={name}\n                fullWidth\n                label=\"Nome\"\n                variant=\"outlined\"\n              />\n              <TextField\n                style={{ marginLeft: '10px' }}\n                onChange={e => setTax(Number(e.target.value).toFixed(2))}\n                type=\"number\"\n                label=\"Imposto\"\n                variant=\"outlined\"\n              />\n            </div>\n\n            <div style={{ display: 'flex' }}>\n              <TextField\n                fullWidth\n                label=\"Palavras-chave\"\n                variant=\"outlined\"\n                value={keyword}\n                onChange={e => setKeyword(e.target.value)}\n              />\n              <IconButton onClick={() => saveKeyword()}>\n                <AddIcon />\n              </IconButton>\n            </div>\n            {keywordsEl.length > 0 && (\n              <Paper style={{ padding: '10px' }} variant=\"outlined\">\n                {keywordsEl}\n              </Paper>\n            )}\n            <Button\n              onClick={() => addProduct()}\n              fullWidth\n              style={{ marginTop: '10px' }}\n              variant=\"outlined\"\n            >\n              Adicionar produto\n            </Button>\n          </CardContent>\n          {products.length > 0 && (\n            <>\n              <Card>\n                <CardHeader title=\"Produtos\" />\n                <CardContent>\n                  <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Nome</TableCell>\n                          <TableCell align=\"right\">Descrição</TableCell>\n                          <TableCell align=\"right\">Imposto</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {products.map((product, index) => (\n                          <>\n                            <TableRow key={`product-${index + 1}`}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {product.name}\n                              </TableCell>\n                              <TableCell align=\"right\">\n                                {product.keywords.join(' | ')}\n                              </TableCell>\n                              <TableCell align=\"right\">\n                                {product.tax}%\n                              </TableCell>\n                              <TableCell>\n                                <DeleteIcon\n                                  style={{ cursor: 'pointer' }}\n                                  color=\"secondary\"\n                                  onClick={() => removeProduct(index)}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          </>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </CardContent>\n                <Button\n                  fullWidth\n                  style={{ marginTop: '10px' }}\n                  variant=\"outlined\"\n                  onClick={() => addToDB(products)}\n                >\n                  {isAdding ? 'Loading...' : 'Enviar para o banco de dados'}\n                </Button>\n              </Card>\n            </>\n          )}\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default AddForm;\n","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Container from '@material-ui/core/Container';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Alert from '@material-ui/lab/Alert';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction ProductsList({\n  fetchProducts,\n  searchFailure,\n  searchSuccess,\n  searchedProducts,\n  deleteFromDB,\n  deleteSuccess\n}) {\n  const [checked, setChecked] = useState(false);\n  const [products, setProducts] = useState([]);\n\n  const [query, setQuery] = useState();\n\n  const searchProducts = () => {\n    if (checked) {\n      // Pesquisar\n      fetchProducts(query);\n    } else {\n      // Todos\n      fetchProducts();\n    }\n  };\n\n  const deleteProduct = id => {\n    deleteFromDB(id);\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Card>\n          {searchFailure && <Alert severity=\"error\">{searchFailure}</Alert>}\n          {searchSuccess && <Alert severity=\"success\">{searchSuccess}</Alert>}\n          <CardHeader\n            title=\"Lista de Produtos\"\n            subheader={\n              <Typography component=\"div\">\n                <Grid\n                  component=\"label\"\n                  container\n                  alignItems=\"center\"\n                  spacing={1}\n                >\n                  <Grid item>Todos</Grid>\n                  <Grid item>\n                    <Switch\n                      checked={checked}\n                      color=\"primary\"\n                      onChange={() => setChecked(!checked)}\n                      value=\"checkedC\"\n                    />\n                  </Grid>\n                  <Grid item>Pesquisar</Grid>\n                </Grid>\n              </Typography>\n            }\n          />\n          <CardContent>\n            <div style={{ display: 'flex', marginBottom: '10px' }}>\n              <TextField\n                onChange={e => setQuery(e.target.value)}\n                fullWidth\n                label=\"Pesquisar\"\n                variant=\"outlined\"\n                disabled={!checked}\n              />\n              <IconButton onClick={() => searchProducts()}>\n                <SearchIcon />\n              </IconButton>\n            </div>\n            {searchedProducts && (\n              <>\n                {deleteSuccess && (\n                  <Alert severity=\"success\">{deleteSuccess}</Alert>\n                )}\n                <TableContainer component={Paper}>\n                  <Table aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Nome</TableCell>\n                        <TableCell align=\"right\">Descrição</TableCell>\n                        <TableCell align=\"right\">Imposto</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {searchedProducts.map((product, index) => (\n                        <TableRow key={`searchedProduct-${index + 1}`}>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {product.name}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {product.keywords.join(' | ')}\n                          </TableCell>\n                          <TableCell align=\"right\">{product.tax}%</TableCell>\n                          <TableCell>\n                            <DeleteIcon\n                              style={{ cursor: 'pointer' }}\n                              color=\"secondary\"\n                              onClick={() => deleteProduct(product._id)}\n                            />\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default ProductsList;\n","import React, { useState } from 'react';\nimport Axios from 'axios';\nimport AddForm from '../AddForm';\nimport ProductsList from '../ProductsList';\nimport { Container, Grid } from '@material-ui/core';\n\nfunction Home({ authToken }) {\n  const [addSuccess, setAddSuccess] = useState(null);\n  const [addFailure, setAddFailure] = useState(null);\n  const [isAdding, setIsAdding] = useState(null);\n  const [searchedProducts, setSearchedProducts] = useState(null);\n  const [searchFailure, setSearchingFailure] = useState(null);\n  const [searchSuccess, setSearchingSuccess] = useState(null);\n  const [deleteSuccess, setDeleteSuccess] = useState(null);\n\n  const addToDB = async products => {\n    setAddFailure(null);\n    setAddSuccess(null);\n    setIsAdding(true);\n    try {\n      const res = await Axios.post(\n        `${process.env.REACT_APP_API_URL}/api/admin/add-products`,\n        { products },\n        { headers: { 'auth-token': authToken } }\n      );\n\n      setAddSuccess(res.data.message);\n      setIsAdding(false);\n    } catch (error) {\n      setAddFailure('There has been an error sending data');\n      setIsAdding(false);\n    }\n  };\n\n  const deleteFromDB = async _id => {\n    setDeleteSuccess(null);\n    try {\n      const res = await Axios.delete(\n        `${process.env.REACT_APP_API_URL}/api/admin/product`,\n        {\n          headers: {\n            'auth-token': authToken\n          },\n          data: { _id }\n        }\n      );\n\n      const newProductsArr = searchedProducts.filter(el => el._id !== _id);\n      setSearchedProducts(newProductsArr);\n      setDeleteSuccess(res.data.message);\n    } catch (error) {\n      setAddFailure('There has been an error tryinh to delete product');\n    }\n  };\n\n  async function fetchProducts() {\n    setSearchingFailure(null);\n    setSearchingSuccess(null);\n    if (arguments[0]) {\n      // Pesquisar\n      try {\n        const res = await Axios.get(\n          `${process.env.REACT_APP_API_URL}/api/product/search?product=${arguments[0]}`\n        );\n\n        setSearchedProducts(res.data.products);\n      } catch (error) {\n        setSearchingFailure('There has been an error trying to fetch products');\n      }\n    } else {\n      // Todos\n      try {\n        const res = await Axios.get(\n          `${process.env.REACT_APP_API_URL}/api/product/all`\n        );\n\n        setSearchedProducts(res.data.products);\n        if (res.data.products.length > 0) {\n          setSearchingSuccess('Products successfully fetched');\n        } else {\n          setSearchingSuccess('Start adding products to database :)');\n        }\n      } catch (error) {\n        setSearchingFailure('There has been an error trying to fetch products');\n      }\n    }\n  }\n\n  return (\n    <Grid container>\n      <Grid style={{ marginTop: '10%' }} item xs={12} md={6}>\n        <AddForm\n          addToDB={addToDB}\n          addFailure={addFailure}\n          addSuccess={addSuccess}\n          isAdding={isAdding}\n        />\n      </Grid>\n      <Grid style={{ marginTop: '10%' }} item xs={12} md={6}>\n        <ProductsList\n          searchFailure={searchFailure}\n          searchSuccess={searchSuccess}\n          searchedProducts={searchedProducts}\n          fetchProducts={fetchProducts}\n          deleteSuccess={deleteSuccess}\n          deleteFromDB={deleteFromDB}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Container from '@material-ui/core/Container';\n\nfunction App() {\n  const [authToken, setAuthToken] = useState(null);\n\n  if (authToken) {\n    return (\n      <Container>\n        <Home authToken={authToken} />\n      </Container>\n    );\n  } else {\n    return (\n      <Container maxWidth=\"sm\">\n        <Login setAuthToken={setAuthToken} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}